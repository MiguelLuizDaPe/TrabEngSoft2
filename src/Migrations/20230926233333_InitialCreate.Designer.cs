// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Webapi.Contexts;

#nullable disable

namespace Webapi.Migrations
{
    [DbContext(typeof(UsuarioContext))]
    [Migration("20230926233333_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Webapi.Entites.Documento", b =>
                {
                    b.Property<int>("documento_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("documento_id"));

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<bool>("passe")
                        .HasColumnType("boolean");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("usuario_id")
                        .HasColumnType("integer");

                    b.Property<int?>("usuario_id1")
                        .HasColumnType("integer");

                    b.HasKey("documento_id");

                    b.HasIndex("usuario_id1");

                    b.ToTable("decumento");
                });

            modelBuilder.Entity("Webapi.Entites.Endereco", b =>
                {
                    b.Property<int>("endereco_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("endereco_id"));

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("complemento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("logradouro")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<int>("usuario_id")
                        .HasColumnType("integer");

                    b.HasKey("endereco_id");

                    b.ToTable("endereco");
                });

            modelBuilder.Entity("Webapi.Entites.Usuario", b =>
                {
                    b.Property<int>("usuario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("usuario_id"));

                    b.Property<bool>("categoria")
                        .HasColumnType("boolean");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<TimeOnly>("data_registro")
                        .HasColumnType("time without time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("endereco_id")
                        .HasColumnType("integer");

                    b.Property<string>("local_moradia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("motociclista")
                        .HasColumnType("boolean");

                    b.Property<string>("nome_completo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("quantidade_passe")
                        .HasColumnType("integer");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.HasKey("usuario_id");

                    b.HasIndex("endereco_id");

                    b.ToTable("usuario");

                    b.HasData(
                        new
                        {
                            usuarioid = 1,
                            categoria = false,
                            cpf = "95395994076",
                            dataregistro = new TimeOnly(7, 23, 11),
                            email = "kkk@gmail.br",
                            localmoradia = "ali po kkkk",
                            motociclista = true,
                            nomecompleto = "Bill Gates",
                            quantidadepasse = 0,
                            senha = "hahahasenha",
                            status = 0,
                            telefone = "(12)11234-1234"
                        });
                });

            modelBuilder.Entity("Webapi.Entites.Documento", b =>
                {
                    b.HasOne("Webapi.Entites.Usuario", null)
                        .WithMany("documentos")
                        .HasForeignKey("usuario_id1");
                });

            modelBuilder.Entity("Webapi.Entites.Usuario", b =>
                {
                    b.HasOne("Webapi.Entites.Endereco", "endereco")
                        .WithMany()
                        .HasForeignKey("endereco_id");

                    b.Navigation("endereco");
                });

            modelBuilder.Entity("Webapi.Entites.Usuario", b =>
                {
                    b.Navigation("documentos");
                });
#pragma warning restore 612, 618
        }
    }
}
